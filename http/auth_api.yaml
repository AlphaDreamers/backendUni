openapi: 3.0.0
info:
  title: Authentication API
  description: API for user authentication and registration
  version: 1.0.0
servers:
  - url: http://localhost:8085/api
    description: Local Development Server

paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Creates a new user account on the platform.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fullname
                - email
                - country
                - biometric_hash
                - password
              properties:
                fullname:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "swanhtetaungp@gmail.com"
                country:
                  type: string
                  example: "USA"
                biometric_hash:
                  type: string
                  description: "Unique biometric hash for user verification"
                  example: "123456dfafsdiiiads789abcdef"
                password:
                  type: string
                  format: password
                  example: "securepassword123"
      responses:
        "201":
          description: User registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User Registration for platform Successful"
        "400":
          description: Invalid input data
        "500":
          description: Internal server error

  /auth/logout:
    post:
      summary: Logout a user
      description: Logs out a user by invalidating their session.
      tags:
        - Authentication
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
            example: "swanhtetaungp@gmail.com"
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User logout successful"
        "400":
          description: Invalid request
        "500":
          description: Internal server error

  /auth/verify:
    post:
      summary: Verify a user account
      description: Verifies a user's email using a verification code.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - code
              properties:
                email:
                  type: string
                  format: email
                  example: "swanhtetaungp@gmail.com"
                code:
                  type: string
                  example: "257865"
      responses:
        "200":
          description: Verification successful
        "400":
          description: Invalid verification code
        "500":
          description: Internal server error

  /auth/login:
    post:
      summary: User login
      description: Authenticates a user and returns an access token.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "swanhtetaungp@gmail.com"
                password:
                  type: string
                  format: password
                  example: "securepassword123"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "400":
          description: Invalid credentials
        "500":
          description: Internal server error

  /auth/wallet:
    post:
      summary: Manage user wallet
      description: Allows users to manage their wallet information.
      tags:
        - Authentication
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userid
                - phrase
              properties:
                userid:
                  type: string
                  format: email
                  example: "swanhtetaungp@gmail.com"
                phrase:
                  type: string
                  example: "fdajfl;adsjfl;adsd"
      responses:
        "200":
          description: Wallet operation successful
        "400":
          description: Invalid request
        "500":
          description: Internal server error

  /auth/me:
    post:
      summary: Get user information
      description: Retrieves user profile information.
      tags:
        - Authentication
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
            example: "swanhtetaungp@gmail.com"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User information retrieved
        "400":
          description: Invalid request
        "500":
          description: Internal server error

  /auth/refresh:
    get:
      summary: Refresh access token
      description: Generates a new access token using a refresh token.
      tags:
        - Authentication
      parameters:
        - name: refresh_token
          in: cookie
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Token refreshed successfully
        "400":
          description: Invalid refresh token
        "500":
          description: Internal server error
  